#!/bin/bash

exec > /tmp/bootstrap.log 2>&1

# config
gitlab_addr=${gitlab_addr}
ssm_region=${ssm_region}
gitlab_runner_registration_token=${ssm_parameter_gitlab_runner_registration_token}

function install_awscli_bundle(){
    yum -y install unzip
    curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
    unzip awscli-bundle.zip
    ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
    rm -f awscli-bundle.zip
}

function ssm_get_parameter(){
  aws --region $${ssm_region} ssm get-parameters --name $1 --with-decryption| python -c 'import json,sys;print json.load(sys.stdin)["Parameters"][0]["Value"]'
}

install_awscli_bundle


gitlab_domain_name=$(echo $gitlab_addr |awk -F[/:] '{print $4}')
curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | bash
export GITLAB_RUNNER_DISABLE_SKEL=true; yum -y install gitlab-runner


# wait for the gitlab server to come up
until (curl -f -sk $${gitlab_addr}/-/health |grep 'GitLab OK'); do
  echo 'waiting for gitlab server to become ready'
  sleep 5
done


# download the gitlab server certificate and update ca trust
mkdir -p /etc/gitlab-runner/certs

openssl s_client -connect $${gitlab_domain_name}:443 </dev/null 2>/dev/null | openssl x509 > /etc/gitlab-runner/certs/$${gitlab_domain_name}.crt
cp /etc/gitlab-runner/certs/$${gitlab_domain_name}.crt /etc/pki/ca-trust/source/anchors
update-ca-trust


# register the shell runner
gitlab-runner register \
  --non-interactive \
  --url "$gitlab_addr" \
  --registration-token "$(ssm_get_parameter $gitlab_runner_registration_token)" \
  --executor "shell" \
  --description "shell-runner_$${HOSTNAME}" \
  --tag-list "shell" \
  --run-untagged="true" \
  --locked="false"

# register the docker runner
gitlab-runner register \
  --non-interactive \
  --url "$gitlab_addr" \
  --registration-token "$(ssm_get_parameter $gitlab_runner_registration_token)" \
  --description "docker-runner_$${HOSTNAME}" \
  --tag-list "docker" \
  --run-untagged="true" \
  --locked="false" \
  --executor "docker" \
  --docker-image alpine:latest \
  --access-level="not_protected"
